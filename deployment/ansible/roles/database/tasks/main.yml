---
# This Playbook installs the database environment

- name: Update apt cache
  apt:
    update_cache: yes
  become: true

- name: Set MySQL password
  debconf: name='mysql-server' question='mysql-server/root_password' value='root' vtype='password'
  become: true

- name: Set MySQL password again
  debconf: name='mysql-server' question='mysql-server/root_password_again' value='root' vtype='password'
  become: true

- name: Format attached volume
  filesystem:
    fstype: ext4
    dev: /dev/vdb
  become: true

- name: Install MySQL Server
  apt:
    name: mysql-server
    state: present
  become: true

- name: Stop MySQL server service
  service:
    name: mysql
    state: stopped
  become: true

- name: Create volume directory
  file:
    path: "{{ database_data_path }}"
    state: directory
    mode: 0755
  become: true

- name: Mount data volume
  mount:
    name: "{{ database_data_path }}"
    src: "{{ database_volume_device }}"
    fstype: ext4
    state: mounted
  become: true

- name: Copy MySQL configuration
  template:
    src: mysqld.cnf.j2
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    owner: root
    mode: 0644
  become: true

- name: Copy apparmor configuration
  template:
    src: alias.j2
    dest: /etc/apparmor.d/tunables/alias
    owner: root
    mode: 0644
  become: true

- name: Restart Apparmor service
  service:
    name: apparmor
    state: restarted
  become: true

- name: Create mysql config folder
  file:
    path: /var/lib/mysql/mysql
    state: directory
    mode: 0755
  become: true

- name: Start MySQL service
  service:
    name: mysql
    state: started
  become: true

- name: Create apps directory
  file: path=/apps state=directory
  become: true

- name: Clone the repository
  git:
    repo: "{{ repository_openstack }}"
    dest: /apps
  become: true